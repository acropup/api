VHS API

VHS API is a simple HTTP interface to store values from various sensors.  VHS API has a notion of a "Hackspace" which may have various "Datapoints".  Each "Datapoint" has a current value, a time it was last set, and a full history of changes.

Contact @lukec for more details or check out the VHS wiki: https://vancouver.hackspace.ca/doku.php?id=servers

DEPENDENCIES:

- PERL, something > 5'ish
- PERL's infamous `carton`
- A Redis server, persumably on 127.0.0.1

INSTALL:

Install these ubuntu packages: libexpat1-dev libssl-dev daemontools daemontools-run

Install necessary Perl packages using Carton: carton install

Run INSTALL.sh to add the startup & nginx config scripts.


DESIGN:

This app is a very small Perl app using the Dancer framework.  It stores all data in a Redis instance.

The app is managed by daemontools.  You can control the process using:

        start:  svc -u /etc/service/vhsapi
        stop:   svc -d /etc/service/vhsapi
        reload: svc -h /etc/service/vhsapi

This will launch the app listening on port 3000.

A web frontend (nginx) will listen on port 80, and then proxy traffic for api.hackspace.ca or isvhsopen.com to port 3000.

DOCKER:

Build a docker image with `docker build .`

Start that docker image with `docker run -d <image id>`




HOW TO HACK ON THIS:

It should be fairly easy to get the Dancer app running in your own machine. This will let you develop changes and test them out.

* Clone this repo `git clone git@github.com/vhs/api`
* Install the deps `carton install`


DEPLOYING:

When it comes time to deploy your changes live push them to Github and then you can ssh into vhs@home.hackspace.ca to deploy them.  (contact lukec or robbat for access).

        cd src/api
        git pull --rebase
        ./INSTALL.sh

This should get your changes from Github and then restart the web servers.  Check api.hackspace.ca to make sure your changes worked.

